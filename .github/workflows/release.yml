name: Create Release Branch
on:
  workflow_dispatch:
    inputs:
      versionRelease:
        description: 'TEST!!! Release version'
        required: true
      nextVersion:
        description: 'The next version to increment to'
        required: true
jobs:
  createrelease:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    container: fvwmorg/fvwm3-build:latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: (re)-create release branch
      run: |
        git config --global --add safe.directory /__w/fvwm3/fvwm3
        git fetch -n origin
        git push origin --delete release/${{ github.event.inputs.versionRelease }} || true
        git checkout -t origin/release-testing-protected
        git checkout -b release/${{ github.event.inputs.versionRelease }}
        git push -u origin HEAD
    - name: Get date
      id: date
      run: echo "date=$(date -d 'now' +'%Y-%m-%d')" >> $GITHUB_ENV
    - name: Generate changelog
      run: |
        apt update && apt install -q -y jq curl
        printf "## [${{ github.event.inputs.versionRelease }}](https://github.com/fvwmorg/fvwm3/tree/${{ github.event.inputs.versionRelease }}) (${{ env.date }})\n" >./tmp.out
        curl \
          --silent \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/fvwmorg/fvwm3/releases/generate-notes \
          -d '{"tag_name":"${{ github.event.inputs.versionRelease }}","target_commitish":"main","configuration_file_path":".github/release.yml"}' | \
                jq -r '.body' >> ./tmp.out
        sed -i '2d' ./tmp.out
        sed -i "2r tmp.out" CHANGELOG.md
    - name: Update Release Status
      run: |
        echo "ISRELEASED=yes" > .release-status
        git add .release-status
    - name: Commit Changes
      run: |
        git config user.name "Thomas Adam"
        git config user.email "thomas@fvwm.org"
        git commit -a --author="Thomas Adam <thomas.adam@fvwm.org>" -m "[AUTO]: release ${{ github.event.inputs.versionRelease }}"
        git checkout release-testing-protected
        git merge --ff-only release/${{ github.event.inputs.versionRelease }}
        git tag -am "Release ${{ github.event.inputs.versionRelease }}" ${{ github.event.inputs.versionRelease }}
        git push
        git push origin --tags ${{ github.events.input.versionRelease }}
    - name: Build artefacts
      run: |
        meson setup --reconfigure build -Dmandoc=true -Dhtmldoc=true -Dgolang=enabled && \
        meson compile -C build && meson dist --formats gztar -C build
    - name: Create Draft Release
      uses: softprops/action-gh-release@v2
      id: create_release
      with:
        draft: true
        prerelease: true
        release_name: ${{ github.event.inputs.versionRelease }}
        tag_name: ${{ github.event.inputs.versionRelease }}
        body_path: CHANGELOG.md
        files: build/meson-dist/fvwm3-${{ github.event.inputs.versionRelease }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Bump next version
      run: |
        echo "${{ github.events.inputs.nextVersion }}" > .current-version
        echo "ISRELEASED=no" > .release-status
        git commit -am "build: set next version"
        git push
